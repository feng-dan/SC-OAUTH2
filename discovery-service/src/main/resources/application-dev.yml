eureka:
  server:
    #eureka server刷新readCacheMap的时间，注意，client读取的是readCacheMap，这个时间决定了多久会把readWriteCacheMap的缓存更新到readCacheMap上
    #默认30s
    #响应缓存更新间隔Ms
    response-cache-update-interval-ms: 3000
    #eureka server缓存readWriteCacheMap失效时间，这个只有在这个时间过去后缓存才会失效，失效前不会更新，过期后从registry重新读取注册服务信息，registry是一个ConcurrentHashMap。
    #默认180s
    #响应缓存自动过期秒
    response-cache-auto-expiration-in-seconds: 180
    #启用主动失效，并且每次主动失效检测间隔为3s
    #驱逐间隔计时器
    #默认60s
    eviction-interval-timer-in-ms: 3000
    #为了便于测试、开发，取消eureka的保护模式，如果启动的话，比如api提供者关闭了，但是eureka仍然会保留.生产环境true
    enable-self-preservation: false
    # 禁用readOnlyCacheMap
    use-read-only-response-cache: false
    #心跳阈值计算周期，如果开启自我保护模式，可以改一下这个配置  120000
#    renewal-threshold-update-interval-ms: 120000
  instance:
    #服务过期时间配置,超过这个时间没有接收到心跳EurekaServer就会将这个实例剔除
    #注意，EurekaServer一定要设置eureka.server.eviction-interval-timer-in-ms否则这个配置无效，这个配置一般为服务刷新时间配置的三倍
    #默认90s
    #租约到期时间以秒为单位
    lease-expiration-duration-in-seconds: 15
    #服务刷新时间配置，每隔这个时间会主动心跳一次
    #默认30s
    #租约续订间隔秒
    lease-renewal-interval-in-seconds: 5
    #应该使用服务器的IP地址来引用操作系统报告的主机名。
    prefer-ip-address: true
    #*如果可以在配置时确定主机名
    hostname: localhost
  client:
    #eureka client刷新本地缓存时间
    #默认30s
    #指示从eureka *服务器获取注册表信息的频率（以秒为单位）。
    registry-fetch-interval-seconds: 5
    #是否将自身注册到eureka server 在集群模式下可以注册到eureka server(开发 单列模式)
    register-with-eureka: false
    #表示此客户端是否应从eureka *服务器获取eureka注册表信息。
    fetch-registry: false
    serviceUrl:
      defaultZone: http://${eureka.instance.hostname}:${server.port}/eureka/
ribbon:
  #eureka客户端ribbon刷新时间
  #默认30s
  ServerListRefreshInterval: 1000
server:
  port: 8762

security:
  basic:
    enabled: true
  user:
    name: admin
    password: admin123456


